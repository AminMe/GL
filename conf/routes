# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# i18n route
POST        /changeLanguage                                 controllers.Application.changeLanguage()
GET         /changerLangue                                  controllers.Application.changeLangue(lang: String)

# Home page
GET         /                                               controllers.DashboardController.afficherDashboard

# Login page
GET         /login                                          controllers.Login.index()
POST        /login                                          controllers.Login.authenticate()
GET         /logout                                         controllers.Application.logout()

# Tests pages
GET         /tests                                          controllers.Tests.index()
POST        /tests                                          controllers.Tests.add()

# Map static resources from the /public folder to the /assets URL path
GET         /assets/js/routes/                              controllers.Application.javascriptRoutes()

GET         /assets/*file                                   controllers.Assets.versioned(path="/public", file: Asset)
GET         /css/*file                                      controllers.Assets.versioned(path="/public/css", file: Asset)
GET         /font-awesome/*file                             controllers.Assets.versioned(path="/public/font-awesome", file: Asset)
GET         /fonts/*file                                    controllers.Assets.versioned(path="/public/fonts", file: Asset)
GET         /img/*file                                      controllers.Assets.versioned(path="/public/img", file: Asset)
GET         /js/*file                                       controllers.Assets.versioned(path="/public/js", file: Asset)
GET         /LESS/*file                                     controllers.Assets.versioned(path="/public/LESS", file: Asset)
GET         /favicon.ico                                    controllers.Assets.at(path="/public", file="favicon.ico")

# CRUD JSRoutes
GET         /taches                                         controllers.Tests.getAll()
POST        /addTask                                        controllers.Tests.addTask()

#View controller
GET         /client                                         controllers.ClientController.afficherClients
GET         /projet                                         controllers.ProjetController.afficherProjets
GET         /creerClient                                    controllers.ClientController.afficherCreerClient
GET         /creerProjet                                    controllers.ProjetController.afficherCreerProjet
GET         /creerUtilisateur                               controllers.UtilisateurController.afficherCreerUtilisateur
GET         /adminClients                                   controllers.AdminController.afficherAdminClients
POST        /adminClientsArchive                            controllers.AdminController.afficherClientsArchives
GET         /adminProjets                                   controllers.AdminController.afficherAdminProjets
GET         /adminUtilisateur                               controllers.AdminController.afficherAdminUtilisateur
POST        /adminUtilisateurArchive                        controllers.AdminController.afficherUtilisateursArchives
GET         /adminUtilisateurNonArchive                     controllers.UtilisateurController.afficherUtilisateursNonArchives
GET         /dashboard                                      controllers.DashboardController.afficherDashboard
GET         /dashboardTacheId                               controllers.DashboardController.afficherModalTache(id: Long)
GET         /adminUtilisateurId                             controllers.AdminController.afficherModalUtilisateur(id: Long)
GET         /adminClientId                                  controllers.AdminController.afficherModalClient(id: Long)
GET         /adminProjetsClient                             controllers.ProjetController.afficherProjetsClient(id: Long)
GET         /adminContactsClient                            controllers.ContactController.afficherContactsClient(id: Long)
GET         /allUsers                                       controllers.UtilisateurController.allUsers()
GET         /allSucesseursPossible                          controllers.DashboardController.getAllSucesseursPossible(idTache: Long)
GET         /AllPredecesseursPossible                       controllers.DashboardController.getAllPredecesseursPossible(idTache: Long)

POST        /modifierTache                                  controllers.DashboardController.modifierTache()
POST        /ajouterProjet                                  controllers.ProjetController.creerProjet
GET         /listProjetsUtilisateur                         controllers.UtilisateurController.listProjetsUtilisateur(id: Long)
GET         /listTachesUtilisateur                          controllers.UtilisateurController.listTachesUtilisateur(id: Long)
GET         /listTachesUtilisateurConnecte                  controllers.UtilisateurController.listTachesUtilisateurConnecte
#view notification
GET         /notifications                                  controllers.NotificationController.afficherNotifications

POST        /adminProjetSelect                              controllers.AdminController.afficherAdminProjetsSelect(idProjet:Long)
POST        /adminProjetTermine                             controllers.AdminController.afficherProjetsTermines(check:Boolean)
POST        /adminProjetArchives                            controllers.AdminController.afficherProjetsArchives(check:Boolean)
POST        /adminProjetSupprimer                           controllers.AdminController.supprimerProjet(idProjet:Long)
POST        /checkContact                                   controllers.ClientController.contactCheck
POST        /ajouterUtilisateur                             controllers.UtilisateurController.creerUtilisateur
POST        /modifierUtilisateur                            controllers.UtilisateurController.modifierUtilisateur(id: Long)
POST        /ajouterClient                                  controllers.ClientController.creerClient
POST        /afficherModalProjetAdmin                       controllers.AdminController.afficherModalProjet(idP: Long)
POST        /initModalAdminProjetRespo                      controllers.AdminController.afficherModalCreerProjetResponsable
POST        /initModalAdminProjetClient                     controllers.AdminController.afficherModalCreerProjetClient
POST        /adminClientSupprimer                           controllers.AdminController.supprimerClient(idC : Long)
POST        /supprimerUtilisateur                           controllers.UtilisateurController.supprimerUtilisateur(idUtilisateur: Long ,strProjet: String ,strTache: String)
POST        /activeOuDesactiveNotification                  controllers.NotificationController.activerOuDesactiverNotificationTache(idTache:Long, idUser:Long)
POST        /getAllInterlocuteur                            controllers.DashboardController.getAllInterlocuteur(idProjet:Long)
POST        /modifierUtilisateursASuivre                    controllers.UtilisateurController.modifierUtilisateursASuivre(idUtilisateurConnecte: Long, listUtilisateurs: String)
POST        /modifierNotificationMesActions                 controllers.UtilisateurController.modifierNotificationMesActions(idUtilisateurConnecte: Long, checkbox: Boolean)
POST        /modifierNotificationTachesPresqueFinies        controllers.UtilisateurController.modifierNotificationTachesPresqueFinies(idUtilisateurConnecte: Long, checkbox: Boolean)
POST        /modifierNotificationTachesRetardees            controllers.UtilisateurController.modifierNotificationTachesRetardees(idUtilisateurConnecte: Long, checkbox: Boolean)
POST        /changePassword                                 controllers.UtilisateurController.changePassword(idUser: Long, previousPassword: String, newPassword: String,confirmNewPassword: String)
POST        /saveBlocNote                                   controllers.DashboardController.saveBlocNote(idUser: Long, note: String)
POST        /clickNotificationsLues                         controllers.NotificationController.clickNotificationsLues(idUser: Long, listIdNotif: String)
POST        /clickNotificationsSupprimer                    controllers.NotificationController.clickNotificationsSupprimer(idUser: Long, listIdNotif: String)
POST        /updateTacheToIndisponible                      controllers.ProjetController.updateTacheToIndisponible(idTache: Long)
POST        /updateTacheToDisponible                        controllers.ProjetController.updateTacheToDisponible(idTache: Long)


#Ajax export clients
GET         /getClientsAsCSV                                controllers.ClientController.getClientsAsCSV
GET         /draft                                          controllers.Application.getDraft

POST        /modifClient                                    controllers.ClientController.modifierClient(idClient : Long)

# Draft parsed
POST        /sendDraf                                       controllers.ProjetController.sendDraf

GET         /affichePeojet                                  controllers.ProjetController.afficheProjet(idProjet: Long)

POST        /modifProjet                                    controllers.ProjetController.modifierProjet(id : Long)

POST        /envoieNotifications                            controllers.NotificationController.sendNotifications()
POST        /checkMdpAdmin                                  controllers.AdminController.checkMdpAdmin(pswd : String)
POST        /modifProjetSelect                              controllers.AdminController.modifierProjet(id :Long)